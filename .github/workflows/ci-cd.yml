name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Backend Docker Image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/projectposts-backend:${{ github.sha }} ./backend

      - name: Push Backend Docker Image to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository_owner }}/projectposts-backend:${{ github.sha }}

      - name: Build Frontend Docker Image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/projectposts-frontend:${{ github.sha }} ./frontend

      - name: Push Frontend Docker Image to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository_owner }}/projectposts-frontend:${{ github.sha }}

      - name: Run Tests
        run: |
          # Здесь должны быть команды для запуска ваших тестов
          # Например: docker run projectposts test

      - name: Push to Docker Registry
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          # Убедитесь, что здесь используются правильные имена образов для backend и frontend
          docker tag ghcr.io/${{ github.repository_owner }}/projectposts-backend:${{ github.sha }} batalovmv/projectposts-backend:latest
          docker push batalovmv/projectposts-backend:latest
          
          docker tag ghcr.io/${{ github.repository_owner }}/projectposts-frontend:${{ github.sha }} batalovmv/projectposts-frontend:latest
          docker push batalovmv/projectposts-frontend:latest

      - name: Deploy to Remote Server
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ghcr.io/${{ github.repository_owner }}/projectposts-backend:${{ github.sha }}
            docker stop myapp-backend-container || true
            docker rm myapp-backend-container || true
            docker run -d --name myapp-backend-container -p 80:3006 ghcr.io/${{ github.repository_owner }}/projectposts-backend:${{ github.sha }}

            docker pull ghcr.io/${{ github.repository_owner }}/projectposts-frontend:${{ github.sha }}
            docker stop myapp-frontend-container || true
            docker rm myapp-frontend-container || true
            docker run -d --name myapp-frontend-container -p 80:80 ghcr.io/${{ github.repository_owner }}/projectposts-frontend:${{ github.sha }}