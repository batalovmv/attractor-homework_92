name: Build and Deploy Docker Images

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/project-backend:latest

      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/project-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Remote Server
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }} 
          username: ${{ secrets.SERVER_USER }} SERVER_USER
          key: ${{ secrets.SSH_PRIVATE_KEY }} 
          script: |
            # Stop and remove the old containers
            docker stop project-backend project-frontend || true
            docker rm project-backend project-frontend || true

            # Pull the new images
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/project-backend:latest
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/project-frontend:latest

            # Start the new containers
            docker run -d --name project-backend -p 3006:3006 ${{ secrets.DOCKER_HUB_USERNAME }}/project-backend:latest
            docker run -d --name project-frontend -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/project-frontend:latest

            # Cleanup unused Docker images
            docker image prune -af